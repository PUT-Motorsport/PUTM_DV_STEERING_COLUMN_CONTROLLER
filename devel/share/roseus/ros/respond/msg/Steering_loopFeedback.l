;; Auto-generated. Do not edit!


(when (boundp 'respond::Steering_loopFeedback)
  (if (not (find-package "RESPOND"))
    (make-package "RESPOND"))
  (shadow 'Steering_loopFeedback (find-package "RESPOND")))
(unless (find-package "RESPOND::STEERING_LOOPFEEDBACK")
  (make-package "RESPOND::STEERING_LOOPFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude Steering_loopFeedback.msg.html


(defclass respond::Steering_loopFeedback
  :super ros::object
  :slots (_current_position ))

(defmethod respond::Steering_loopFeedback
  (:init
   (&key
    ((:current_position __current_position) 0.0)
    )
   (send-super :init)
   (setq _current_position (float __current_position))
   self)
  (:current_position
   (&optional __current_position)
   (if __current_position (setq _current_position __current_position)) _current_position)
  (:serialization-length
   ()
   (+
    ;; float32 _current_position
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _current_position
       (sys::poke _current_position (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _current_position
     (setq _current_position (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get respond::Steering_loopFeedback :md5sum-) "a447468e6d196264c01d04f925289e8a")
(setf (get respond::Steering_loopFeedback :datatype-) "respond/Steering_loopFeedback")
(setf (get respond::Steering_loopFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define a feedback message
float32 current_position

")



(provide :respond/Steering_loopFeedback "a447468e6d196264c01d04f925289e8a")


