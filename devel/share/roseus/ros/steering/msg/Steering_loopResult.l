;; Auto-generated. Do not edit!


(when (boundp 'steering::Steering_loopResult)
  (if (not (find-package "STEERING"))
    (make-package "STEERING"))
  (shadow 'Steering_loopResult (find-package "STEERING")))
(unless (find-package "STEERING::STEERING_LOOPRESULT")
  (make-package "STEERING::STEERING_LOOPRESULT"))

(in-package "ROS")
;;//! \htmlinclude Steering_loopResult.msg.html


(defclass steering::Steering_loopResult
  :super ros::object
  :slots (_movement_done _result_position ))

(defmethod steering::Steering_loopResult
  (:init
   (&key
    ((:movement_done __movement_done) nil)
    ((:result_position __result_position) 0.0)
    )
   (send-super :init)
   (setq _movement_done __movement_done)
   (setq _result_position (float __result_position))
   self)
  (:movement_done
   (&optional (__movement_done :null))
   (if (not (eq __movement_done :null)) (setq _movement_done __movement_done)) _movement_done)
  (:result_position
   (&optional __result_position)
   (if __result_position (setq _result_position __result_position)) _result_position)
  (:serialization-length
   ()
   (+
    ;; bool _movement_done
    1
    ;; float32 _result_position
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _movement_done
       (if _movement_done (write-byte -1 s) (write-byte 0 s))
     ;; float32 _result_position
       (sys::poke _result_position (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _movement_done
     (setq _movement_done (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; float32 _result_position
     (setq _result_position (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get steering::Steering_loopResult :md5sum-) "a99868e9ad2b15f76f29eb5217e35ef4")
(setf (get steering::Steering_loopResult :datatype-) "steering/Steering_loopResult")
(setf (get steering::Steering_loopResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the result
bool movement_done
float32 result_position

")



(provide :steering/Steering_loopResult "a99868e9ad2b15f76f29eb5217e35ef4")


