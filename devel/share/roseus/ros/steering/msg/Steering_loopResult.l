;; Auto-generated. Do not edit!


(when (boundp 'steering::Steering_loopResult)
  (if (not (find-package "STEERING"))
    (make-package "STEERING"))
  (shadow 'Steering_loopResult (find-package "STEERING")))
(unless (find-package "STEERING::STEERING_LOOPRESULT")
  (make-package "STEERING::STEERING_LOOPRESULT"))

(in-package "ROS")
;;//! \htmlinclude Steering_loopResult.msg.html


(defclass steering::Steering_loopResult
  :super ros::object
  :slots (_movement_done ))

(defmethod steering::Steering_loopResult
  (:init
   (&key
    ((:movement_done __movement_done) nil)
    )
   (send-super :init)
   (setq _movement_done __movement_done)
   self)
  (:movement_done
   (&optional (__movement_done :null))
   (if (not (eq __movement_done :null)) (setq _movement_done __movement_done)) _movement_done)
  (:serialization-length
   ()
   (+
    ;; bool _movement_done
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _movement_done
       (if _movement_done (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _movement_done
     (setq _movement_done (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get steering::Steering_loopResult :md5sum-) "5fa7b13e5c043e733d74b099cb87b938")
(setf (get steering::Steering_loopResult :datatype-) "steering/Steering_loopResult")
(setf (get steering::Steering_loopResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the result
bool movement_done

")



(provide :steering/Steering_loopResult "5fa7b13e5c043e733d74b099cb87b938")


